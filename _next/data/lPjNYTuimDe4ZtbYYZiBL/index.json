{"pageProps":{"projects":[{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"I spent a while using p5.js to explore different coding concepts, like bezier curves or interpolation.\\nI decided to organise them in a little website, since I think a few of them are neat.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The pages for each p5.js sketch are dynamically created by dynamically importing the sketch, and loading some data from a .mdx file.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This was a useful exercise to test that out before using the same method to create the description you're reading right now!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Creative Coding in p5.js","description":"A collection of sketches in p5.js, a javascript library for creative coding.","github":"https://github.com/lofi-marz/p5js-experiments","link":"https://p5js-experiments-gamma.vercel.app/","tech":"p5.js, React, Typescript, Tailwind","visible":true}},"frontMatter":{"title":"Creative Coding in p5.js","description":"A collection of sketches in p5.js, a javascript library for creative coding.","github":"https://github.com/lofi-marz/p5js-experiments","link":"https://p5js-experiments-gamma.vercel.app/","tech":"p5.js, React, Typescript, Tailwind","visible":true},"name":"p5js-experiments"},{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"A test of my design skills.\\nThis site is a great place to explore any flashy ideas I have, like animation ideas using Framer Motion.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The descriptions for these projects are loaded from .mdx files using Next.js' Static Generation.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Portfolio","description":"Well you're on it now ¯\\_(ツ)_/¯","github":"https://github.com/lofi-marz/lofi-marz.github.io","link":"https://lofi-marz.github.io/","tech":"React, Typescript, p5.js, Tailwind","visible":true}},"frontMatter":{"title":"Portfolio","description":"Well you're on it now ¯\\_(ツ)_/¯","github":"https://github.com/lofi-marz/lofi-marz.github.io","link":"https://lofi-marz.github.io/","tech":"React, Typescript, p5.js, Tailwind","visible":true},"name":"portfolio"},{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"This was mainly for design purposes; I wanted a smaller-scale, few-day project without much logic.\\nI might implement more of these one day. Making up imaginary businesses is quite fun.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Restaurant Landing Page","description":"A design for a fictional restaurant landing page","link":"https://chunkies-landing-page.vercel.app/","github":"https://github.com/lofi-marz/restaurant-landing-page","tech":"React, Next.js, Typescript, Framer Motion, Tailwind","visible":true}},"frontMatter":{"title":"Restaurant Landing Page","description":"A design for a fictional restaurant landing page","link":"https://chunkies-landing-page.vercel.app/","github":"https://github.com/lofi-marz/restaurant-landing-page","tech":"React, Next.js, Typescript, Framer Motion, Tailwind","visible":true},"name":"restaurant-landing-page"},{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"A lot of my projects are motivated by seeing something, and imagining coding it to be pretty fun.\\nWordle piqued my interest as a project that was small in scope, interesting, and simple enough that it was easy to break it down into small tasks.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I ended up going down a rabbit hole with my little twist on it; you have the ability to share your own wordle puzzle, which is encoded in the URL.\\nThe encoding is nothing secure, but it was fun to create. I went down a rabbit hole in the rabbit hole trying to implement a sort of promise-like builder for the encoding steps.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Yourdle","description":"A wordle clone with the ability to create and share wordle puzzles","github":"https://github.com/lofi-marz/wordle-clone","link":"https://yourdlegame.vercel.app","tech":"React, Typescript, Tailwind","visible":true}},"frontMatter":{"title":"Yourdle","description":"A wordle clone with the ability to create and share wordle puzzles","github":"https://github.com/lofi-marz/wordle-clone","link":"https://yourdlegame.vercel.app","tech":"React, Typescript, Tailwind","visible":true},"name":"yourdle"}]},"__N_SSG":true}